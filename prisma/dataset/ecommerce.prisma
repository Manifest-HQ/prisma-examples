// Give me a prisma schema for a relational database of E-commerce with tables for Inventory management, customer orders, and product data 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model product {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  price         Float
  stock         Int
  categories    product_category[] 
  orders        order_item[]

  @@unique([name])
}

model category {
  id       Int             @id @default(autoincrement())
  name     String
  products product_category[]

  @@unique([name])
}

model product_category {
  productId Int
  product   product @relation(fields: [productId], references: [id])
  categoryId Int
  category  category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
}


model customer {
  id      Int     @id @default(autoincrement())
  name    String
  email   String  @unique
  orders  order[]
}

model order {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  status     order_status
  customer   customer    @relation(fields: [customerId], references: [id])
  customerId Int
  items      order_item[]
}


model order_item {
  id        Int     @id @default(autoincrement())
  order     order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int

  @@unique([orderId, productId])
}

enum order_status {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}