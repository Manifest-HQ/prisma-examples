//change the rellation between loan and account to many to many 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  phone     String?
  accounts  account[]
}

model account {
  id                  Int           @id @default(autoincrement())
  customer_id          Int
  customer            customer      @relation(fields: [customer_id], references: [id])
  type                String       
  balance             Float
  created_at           DateTime      @default(now())
  transactions_origin  transaction[] @relation("Origin")
  transactions_destiny transaction[] @relation("Destiny")
  branch_id            Int           
  branch              branch        @relation(fields: [branch_id], references: [id])
  loan                account_loan[]
}

model account_loan {
  id              Int      @id @default(autoincrement())
  account_id      Int
  account        account   @relation(fields: [account_id], references: [id])
  loan_id        Int
  loan          loan     @relation(fields: [loan_id], references: [id])
}
model transaction {
  id              Int      @id @default(autoincrement())
  account_origin_id Int
  account_destiny_id Int
  account_origin    account @relation(name: "Origin", fields: [account_origin_id], references: [id])
  account_destiny   account @relation(name: "Destiny", fields: [account_destiny_id], references: [id])
  amount           Float
  date             DateTime @default(now())
}

model employee {
  id       Int    @id @default(autoincrement())
  name     String
  position String
  email    String @unique
  branch   branch @relation(fields: [branch_id], references: [id])
  branch_id Int
}

model branch {
  id       Int        @id @default(autoincrement())
  name     String
  location String
  employees employee[]
  accounts  account[]
}

model loan {
  id          Int      @id @default(autoincrement())
  amount      Float
  interest_rate Float
  start_date   DateTime
  due_date     DateTime
  account     account_loan[]
}
