{"messages": [{"role": "user", "content": "Give me a schema for a relational database of an airline, with tables for flights, reservations, passengers, luggage and pilot."}, {"role": "assistant", "content": "\r\n// ---PROMPTS---\r\n// CHATGPT: dame una base de datos relacional  usando prisma para Aerolíneas la cual tenga Reservas de vuelos, información de pasajeros y gestión de equipaje. y cualquier otra adicional como pasajeros, pilootos, etc. dame uuna de forma compleja manteniendo las relaciones 1-1 1-m o m-m, con indices que creas necesarios, y definiendo todo con sus ids y uniques\r\n// REAL: dame un esquema para una base de datos relacional de una aerolinea, con las tablas de vuelos, reservas, pasajeros, equipaje y piloto\r\n\r\n\r\ngenerator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel Vuelo {\r\n  id          Int       @id @default(autoincrement())\r\n  codigo      String    @unique\r\n  origen      String\r\n  destino     String\r\n  fecha       DateTime\r\n  Reservas    Reserva[]\r\n  Pilotos     PilotoVuelo[]\r\n  @@index([destino,origen])\r\n}\r\n\r\nmodel Reserva {\r\n  id          Int       @id @default(autoincrement())\r\n  vueloId     Int\r\n  pasajeroId  Int\r\n  asiento     String\r\n  clase       String\r\n  Vuelo       Vuelo     @relation(fields: [vueloId], references: [id])\r\n  Pasajero    Pasajero  @relation(fields: [pasajeroId], references: [id])\r\n  Equipaje    Equipaje[]\r\n  @@index([pasajeroId])\r\n}\r\n\r\nmodel Pasajero {\r\n  id          Int       @id @default(autoincrement())\r\n  nombre      String\r\n  apellido    String\r\n  email       String    @unique\r\n  Reservas    Reserva[]\r\n  @@index([nombre,apellido])\r\n}\r\n\r\nmodel Equipaje {\r\n  id          Int       @id @default(autoincrement())\r\n  reservaId   Int\r\n  peso        Float\r\n  descripcion String\r\n  Reserva     Reserva   @relation(fields: [reservaId], references: [id])\r\n}\r\n\r\nmodel Piloto {\r\n  id          Int       @id @default(autoincrement())\r\n  nombre      String\r\n  apellido    String\r\n  licencia    String    @unique\r\n  Vuelos      PilotoVuelo[]   \r\n  @@index([nombre,apellido])\r\n}\r\n\r\nmodel PilotoVuelo {\r\n  pilotoId    Int\r\n  vueloId     Int\r\n  Piloto      Piloto    @relation(fields: [pilotoId], references: [id])\r\n  Vuelo       Vuelo     @relation(fields: [vueloId], references: [id])\r\n  @@id([pilotoId, vueloId])\r\n}\r\n\r\n\r\n"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of galery art, with tables for  Artwork, artists and Exhibition."}, {"role": "assistant", "content": "\r\ngenerator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel Artwork {\r\n  id                Int                 @id @default(autoincrement())\r\n  title             String\r\n  description       String?\r\n  date              DateTime\r\n  artistId          Int\r\n  Artist            Artist              @relation(fields: [artistId], references: [id])\r\n  ArtworkExhibitions ArtworkExhibition[]\r\n}\r\n\r\nmodel Artist {\r\n  id        Int       @id @default(autoincrement())\r\n  name      String\r\n  biography String?\r\n  Artworks  Artwork[]\r\n}\r\n\r\nmodel Exhibition {\r\n  id              Int               @id @default(autoincrement())\r\n  name            String\r\n  start           DateTime\r\n  end             DateTime?\r\n  ArtworkExhibitions ArtworkExhibition[]\r\n}\r\n\r\n\r\nmodel ArtworkExhibition {\r\n  artworkId     Int\r\n  exhibitionId  Int\r\n  Artwork       Artwork      @relation(fields: [artworkId], references: [id])\r\n  Exhibition    Exhibition   @relation(fields: [exhibitionId], references: [id])\r\n  @@id([artworkId, exhibitionId])\r\n}\r\n\r\n"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of Bank, with tables for Handling of accounts, transactions, and customer data."}, {"role": "assistant", "content": "\r\ngenerator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel Customer {\r\n  id        Int       @id @default(autoincrement())\r\n  name      String\r\n  email     String    @unique\r\n  phone     String?\r\n  accounts  Account[]\r\n}\r\n\r\nmodel Account {\r\n  id                  Int           @id @default(autoincrement())\r\n  customerId          Int\r\n  customer            Customer      @relation(fields: [customerId], references: [id])\r\n  type                String       \r\n  balance             Float\r\n  createdAt           DateTime      @default(now())\r\n  transactionsOrigin  Transaction[] @relation(\"Origin\")\r\n  transactionsDestiny Transaction[] @relation(\"Destiny\")\r\n  branchId            Int           \r\n  branch              Branch        @relation(fields: [branchId], references: [id])\r\n  loanId              Int\r\n  loan                Loan          @relation(fields: [loanId], references: [id])\r\n}\r\n\r\nmodel Transaction {\r\n  id              Int      @id @default(autoincrement())\r\n  accountOriginId Int\r\n  accountDestinyId Int\r\n  accountOrigin    Account @relation(name: \"Origin\", fields: [accountOriginId], references: [id])\r\n  accountDestiny   Account @relation(name: \"Destiny\", fields: [accountDestinyId], references: [id])\r\n  amount           Float\r\n  date             DateTime @default(now())\r\n}\r\n\r\nmodel Employee {\r\n  id       Int    @id @default(autoincrement())\r\n  name     String\r\n  position String\r\n  email    String @unique\r\n  branch   Branch @relation(fields: [branchId], references: [id])\r\n  branchId Int\r\n}\r\n\r\nmodel Branch {\r\n  id       Int        @id @default(autoincrement())\r\n  name     String\r\n  location String\r\n  employees Employee[]\r\n  accounts  Account[]\r\n}\r\n\r\nmodel Loan {\r\n  id          Int      @id @default(autoincrement())\r\n  amount      Float\r\n  interestRate Float\r\n  startDate   DateTime\r\n  dueDate     DateTime\r\n  account     Account[]\r\n}\r\n"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of Libraries with tables for Book catalog, loans, and users."}, {"role": "assistant", "content": "generator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel Book {\r\n  id        Int      @id @default(autoincrement())\r\n  title     String\r\n  author    String\r\n  loans     Loan[]\r\n  @@index([title,author])\r\n}\r\n\r\nmodel User {\r\n  id        Int      @id @default(autoincrement())\r\n  name      String\r\n  loans     Loan[]\r\n}\r\n\r\nmodel Loan {\r\n  id        Int      @id @default(autoincrement())\r\n  bookId    Int\r\n  userId    Int\r\n  book      Book     @relation(fields: [bookId], references: [id])\r\n  user      User     @relation(fields: [userId], references: [id])\r\n  loanDate  DateTime\r\n  returnDate DateTime?\r\n}"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of Data centers with tables for Infrastructure monitoring, incident management, and resource optimization."}, {"role": "assistant", "content": "generator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel DataCenter {\r\n  id          Int       @id @default(autoincrement())\r\n  name        String    @unique\r\n  location    String\r\n  Servers     Server[]\r\n  Incidents   Incident[]\r\n}\r\n\r\nmodel Server {\r\n  id          Int       @id @default(autoincrement())\r\n  hostname    String    @unique\r\n  ipAddress   String    @unique\r\n  dataCenterId Int\r\n  DataCenter  DataCenter @relation(fields: [dataCenterId], references: [id])\r\n  Resources   Resource[]\r\n  Incidents   Incident[]\r\n}\r\n\r\nmodel Resource {\r\n  id          Int       @id @default(autoincrement())\r\n  type        String\r\n  usage       Float\r\n  serverId    Int\r\n  Server      Server    @relation(fields: [serverId], references: [id])\r\n}\r\n\r\nmodel Incident {\r\n  id          Int       @id @default(autoincrement())\r\n  description String\r\n  resolved    Boolean   @default(false)\r\n  serverId    Int?\r\n  Server      Server?   @relation(fields: [serverId], references: [id])\r\n  dataCenterId Int?\r\n  DataCenter  DataCenter? @relation(fields: [dataCenterId], references: [id])\r\n  @@index([description,resolved])\r\n}"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of Cinemas with tables for Ticket sales, movie schedules, and theater management"}, {"role": "assistant", "content": "generator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\n\r\nmodel Movie {\r\n  id          Int       @id @default(autoincrement())\r\n  title       String\r\n  duration    Int       // Duration in minutes\r\n  showtimes   Showtime[]\r\n}\r\n\r\nmodel Cinema {\r\n  id          Int       @id @default(autoincrement())\r\n  name        String\r\n  location    String\r\n  halls       Hall[]\r\n}\r\n\r\nmodel Hall {\r\n  id          Int       @id @default(autoincrement())\r\n  name        String\r\n  cinemaId    Int\r\n  cinema      Cinema    @relation(fields: [cinemaId], references: [id])\r\n  seats       Seat[]\r\n  showtimes   Showtime[]\r\n}\r\n\r\nmodel Seat {\r\n  id          Int       @id @default(autoincrement())\r\n  number      String\r\n  hallId      Int\r\n  hall        Hall      @relation(fields: [hallId], references: [id])\r\n  tickets     Ticket[]\r\n}\r\n\r\nmodel Showtime {\r\n  id          Int       @id @default(autoincrement())\r\n  startTime   DateTime\r\n  movieId     Int\r\n  movie       Movie     @relation(fields: [movieId], references: [id])\r\n  hallId      Int\r\n  hall        Hall      @relation(fields: [hallId], references: [id])\r\n  tickets     Ticket[]\r\n}\r\n\r\nmodel Ticket {\r\n  id          Int       @id @default(autoincrement())\r\n  customerId  Int?\r\n  customer    Customer? @relation(fields: [customerId], references: [id])\r\n  showtimeId  Int\r\n  showtime    Showtime  @relation(fields: [showtimeId], references: [id])\r\n  seatId      Int\r\n  seat        Seat      @relation(fields: [seatId], references: [id])\r\n  price       Float\r\n}\r\n\r\nmodel Customer {\r\n  id          Int       @id @default(autoincrement())\r\n  name        String\r\n  email       String    @unique\r\n  tickets     Ticket[]\r\n}"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of Conferences with tables for Participants, schedule, and ticket sales."}, {"role": "assistant", "content": "generator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel Participant {\r\n  id        Int       @id @default(autoincrement())\r\n  name      String\r\n  email     String    @unique\r\n  tickets   Ticket[]\r\n  sessions  Session[] @relation(\"SessionParticipants\")\r\n}\r\n\r\nmodel Session {\r\n  id              Int           @id @default(autoincrement())\r\n  title           String\r\n  startTime       DateTime\r\n  endTime         DateTime\r\n  speakerId       Int\r\n  speaker         Speaker       @relation(fields: [speakerId], references: [id])\r\n  participants    Participant[] @relation(\"SessionParticipants\")\r\n  eventId         Int           \r\n  event           Event         @relation(fields: [eventId], references: [id]) \r\n}\r\n\r\nmodel Speaker {\r\n  id        Int       @id @default(autoincrement())\r\n  name      String\r\n  bio       String\r\n  sessions  Session[]\r\n}\r\n\r\nmodel Ticket {\r\n  id            Int         @id @default(autoincrement())\r\n  type          String\r\n  price         Float\r\n  participantId Int\r\n  participant   Participant @relation(fields: [participantId], references: [id])\r\n  eventId       Int\r\n  event         Event       @relation(fields: [eventId], references: [id])\r\n  @@index([participantId, eventId])\r\n}\r\n\r\nmodel Event {\r\n  id        Int       @id @default(autoincrement())\r\n  name      String\r\n  location  String\r\n  date      DateTime\r\n  tickets   Ticket[]\r\n  sessions  Session[]\r\n  logistics Logistics[]\r\n  @@index([name, location, date])\r\n}\r\n\r\nmodel Logistics {\r\n  id          Int     @id @default(autoincrement())\r\n  description String\r\n  eventId     Int\r\n  event       Event   @relation(fields: [eventId], references: [id])\r\n}\r\n"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of Consultancies with tables for Projects, clients, and outcomes."}, {"role": "assistant", "content": "generator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel Client {\r\n  id        Int      @id @default(autoincrement())\r\n  name      String   @unique\r\n  email     String   @unique\r\n  projects  Project[]\r\n}\r\n\r\nmodel Project {\r\n  id          Int      @id @default(autoincrement())\r\n  name        String\r\n  description String\r\n  clientId    Int\r\n  client      Client   @relation(fields: [clientId], references: [id])\r\n  results     Result[]\r\n  @@index([name, description])\r\n}\r\n\r\nmodel Result {\r\n  id          Int      @id @default(autoincrement())\r\n  outcome     String\r\n  projectId   Int\r\n  project     Project  @relation(fields: [projectId], references: [id])\r\n  @@index([outcome])\r\n}\r\n\r\n"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of Design studios with tables fot Projects, clients, deliverables and state of delivers."}, {"role": "assistant", "content": "generator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel Project {\r\n  id          Int          @id @default(autoincrement())\r\n  name        String\r\n  description String\r\n  clientId    Int\r\n  client      Client       @relation(fields: [clientId], references: [id])\r\n  deliverables Deliverable[]\r\n  @@index([name, description])\r\n}\r\n\r\nmodel Client {\r\n  id       Int       @id @default(autoincrement())\r\n  name     String\r\n  email    String    @unique\r\n  projects Project[]\r\n}\r\n\r\nmodel Deliverable {\r\n  id          Int      @id @default(autoincrement())\r\n  title       String\r\n  description String\r\n  projectId   Int\r\n  project     Project  @relation(fields: [projectId], references: [id])\r\n  statusId    Int\r\n  status      Status   @relation(fields: [statusId], references: [id])\r\n  @@index([title, description])\r\n}\r\n\r\nmodel Status {\r\n  id           Int           @id @default(autoincrement())\r\n  name         String\r\n  description  String\r\n  deliverables Deliverable[]\r\n  @@index([name, description])\r\n}\r\n\r\n"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of E-commerce with tables for Inventory management, customer orders, and product data."}, {"role": "assistant", "content": "generator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel Product {\r\n  id            Int             @id @default(autoincrement())\r\n  name          String\r\n  description   String\r\n  price         Float\r\n  stock         Int\r\n  categories    ProductCategory[] \r\n  orders        OrderItem[]\r\n\r\n  @@unique([name])\r\n}\r\n\r\nmodel Category {\r\n  id       Int             @id @default(autoincrement())\r\n  name     String\r\n  products ProductCategory[]\r\n\r\n  @@unique([name])\r\n}\r\n\r\nmodel ProductCategory {\r\n  productId Int\r\n  product   Product @relation(fields: [productId], references: [id])\r\n  categoryId Int\r\n  category  Category @relation(fields: [categoryId], references: [id])\r\n\r\n  @@id([productId, categoryId])\r\n}\r\n\r\n\r\nmodel Customer {\r\n  id      Int     @id @default(autoincrement())\r\n  name    String\r\n  email   String  @unique\r\n  orders  Order[]\r\n}\r\n\r\nmodel Order {\r\n  id         Int         @id @default(autoincrement())\r\n  createdAt  DateTime    @default(now())\r\n  updatedAt  DateTime    @updatedAt\r\n  status     OrderStatus\r\n  customer   Customer    @relation(fields: [customerId], references: [id])\r\n  customerId Int\r\n  items      OrderItem[]\r\n}\r\n\r\n\r\nmodel OrderItem {\r\n  id        Int     @id @default(autoincrement())\r\n  order     Order   @relation(fields: [orderId], references: [id])\r\n  orderId   Int\r\n  product   Product @relation(fields: [productId], references: [id])\r\n  productId Int\r\n  quantity  Int\r\n\r\n  @@unique([orderId, productId])\r\n}\r\n\r\nenum OrderStatus {\r\n  PENDING\r\n  SHIPPED\r\n  DELIVERED\r\n  CANCELLED\r\n}"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of Schools with tables for Student information, grades, Subjects, Courses and class schedules."}, {"role": "assistant", "content": "generator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\n// schema.prisma\r\n\r\nmodel Student {\r\n  id        Int       @id @default(autoincrement())\r\n  name      String\r\n  email     String    @unique\r\n  grades    Grade[]\r\n  courses   CourseStudents[]\r\n  @@index([name, email])\r\n}\r\n\r\nmodel Grade {\r\n  id         Int      @id @default(autoincrement())\r\n  value      String\r\n  studentId  Int\r\n  subjectId  Int\r\n  student    Student  @relation(fields: [studentId], references: [id])\r\n  subject    Subject  @relation(fields: [subjectId], references: [id])\r\n  @@index([value])\r\n}\r\n\r\nmodel ClassSchedule {\r\n  id         Int      @id @default(autoincrement())\r\n  time       String\r\n  courseId   Int\r\n  course     Course   @relation(fields: [courseId], references: [id])\r\n}\r\n\r\nmodel Course {\r\n  id          Int             @id @default(autoincrement())\r\n  name        String\r\n  schedules   ClassSchedule[]\r\n  students    CourseStudents[]    \r\n  subjects    CourseSubjects[]     \r\n}\r\n\r\nmodel Subject {\r\n  id          Int       @id @default(autoincrement())\r\n  name        String\r\n  grades      Grade[]\r\n  courses     CourseSubjects[]  \r\n}\r\n\r\n// Many-to-many relation setup for students and courses\r\nmodel CourseStudents {\r\n  student   Student @relation(fields: [studentId], references: [id])\r\n  studentId Int\r\n  course    Course  @relation(fields: [courseId], references: [id])\r\n  courseId  Int\r\n\r\n  @@id([studentId, courseId])\r\n}\r\n\r\n// Many-to-many relation setup for courses and subjects\r\nmodel CourseSubjects {\r\n  course    Course  @relation(fields: [courseId], references: [id])\r\n  courseId  Int\r\n  subject   Subject @relation(fields: [subjectId], references: [id])\r\n  subjectId Int\r\n\r\n  @@id([courseId, subjectId])\r\n}"}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}
{"messages": [{"role": "user", "content": "Give me a schema for a relational database of "}, {"role": "assistant", "content": ""}]}

